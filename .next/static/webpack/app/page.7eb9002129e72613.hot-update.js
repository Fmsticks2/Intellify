"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/WalletProvider.tsx":
/*!*******************************************!*\
  !*** ./src/components/WalletProvider.tsx ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WalletProvider: function() { return /* binding */ WalletProvider; },\n/* harmony export */   useWallet: function() { return /* binding */ useWallet; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ WalletProvider,useWallet auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nconst WalletContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\n// 0G Testnet configuration\nconst TARGET_NETWORK = {\n    chainId: \"0x4081\",\n    chainName: \"0G Testnet\",\n    nativeCurrency: {\n        name: \"0G\",\n        symbol: \"0G\",\n        decimals: 18\n    },\n    rpcUrls: [\n        \"https://evmrpc-testnet.0g.ai\"\n    ],\n    blockExplorerUrls: [\n        \"https://chainscan-testnet.0g.ai\"\n    ]\n};\nfunction WalletProvider(param) {\n    let { children } = param;\n    _s();\n    const [wallet, setWallet] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        isConnected: false,\n        address: null,\n        chainId: null,\n        balance: null\n    });\n    const [isConnecting, setIsConnecting] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        checkWalletConnection();\n        if ( true && window.ethereum) {\n            window.ethereum.on(\"accountsChanged\", handleAccountsChanged);\n            window.ethereum.on(\"chainChanged\", handleChainChanged);\n        }\n        return ()=>{\n            if ( true && window.ethereum) {\n                window.ethereum.removeListener(\"accountsChanged\", handleAccountsChanged);\n                window.ethereum.removeListener(\"chainChanged\", handleChainChanged);\n            }\n        };\n    }, []);\n    const checkWalletConnection = async ()=>{\n        if ( true && window.ethereum) {\n            try {\n                const accounts = await window.ethereum.request({\n                    method: \"eth_accounts\"\n                });\n                const chainId = await window.ethereum.request({\n                    method: \"eth_chainId\"\n                });\n                if (accounts.length > 0) {\n                    const balance = await getBalance(accounts[0]);\n                    setWallet({\n                        isConnected: true,\n                        address: accounts[0],\n                        chainId: parseInt(chainId, 16),\n                        balance\n                    });\n                }\n            } catch (error) {\n                console.error(\"Error checking wallet connection:\", error);\n            }\n        }\n    };\n    const getBalance = async (address)=>{\n        try {\n            const balance = await window.ethereum.request({\n                method: \"eth_getBalance\",\n                params: [\n                    address,\n                    \"latest\"\n                ]\n            });\n            // Convert from wei to ether\n            const balanceInEther = parseInt(balance, 16) / Math.pow(10, 18);\n            return balanceInEther.toFixed(4);\n        } catch (error) {\n            console.error(\"Error getting balance:\", error);\n            return \"0.0000\";\n        }\n    };\n    const connectWallet = async ()=>{\n        if ( true && window.ethereum) {\n            setIsConnecting(true);\n            try {\n                const accounts = await window.ethereum.request({\n                    method: \"eth_requestAccounts\"\n                });\n                const chainId = await window.ethereum.request({\n                    method: \"eth_chainId\"\n                });\n                const balance = await getBalance(accounts[0]);\n                setWallet({\n                    isConnected: true,\n                    address: accounts[0],\n                    chainId: parseInt(chainId, 16),\n                    balance\n                });\n            } catch (error) {\n                console.error(\"Error connecting wallet:\", error);\n                throw error;\n            } finally{\n                setIsConnecting(false);\n            }\n        } else {\n            throw new Error(\"Please install MetaMask or another Web3 wallet!\");\n        }\n    };\n    const disconnectWallet = ()=>{\n        setWallet({\n            isConnected: false,\n            address: null,\n            chainId: null,\n            balance: null\n        });\n    };\n    const switchToCorrectNetwork = async ()=>{\n        if ( true && window.ethereum) {\n            try {\n                // Try to switch to the network\n                await window.ethereum.request({\n                    method: \"wallet_switchEthereumChain\",\n                    params: [\n                        {\n                            chainId: TARGET_NETWORK.chainId\n                        }\n                    ]\n                });\n                return true;\n            } catch (switchError) {\n                // This error code indicates that the chain has not been added to MetaMask\n                if (switchError.code === 4902) {\n                    try {\n                        await window.ethereum.request({\n                            method: \"wallet_addEthereumChain\",\n                            params: [\n                                TARGET_NETWORK\n                            ]\n                        });\n                        return true;\n                    } catch (addError) {\n                        console.error(\"Error adding network:\", addError);\n                        return false;\n                    }\n                } else {\n                    console.error(\"Error switching network:\", switchError);\n                    return false;\n                }\n            }\n        }\n        return false;\n    };\n    const handleAccountsChanged = async (accounts)=>{\n        if (accounts.length === 0) {\n            disconnectWallet();\n        } else {\n            const balance = await getBalance(accounts[0]);\n            setWallet((prev)=>({\n                    ...prev,\n                    address: accounts[0],\n                    balance\n                }));\n        }\n    };\n    const handleChainChanged = (chainId)=>{\n        setWallet((prev)=>({\n                ...prev,\n                chainId: parseInt(chainId, 16)\n            }));\n        // Reload the page to reset any state that depends on the network\n        if (true) {\n            window.location.reload();\n        }\n    };\n    const value = {\n        wallet,\n        connectWallet,\n        disconnectWallet,\n        isConnecting,\n        switchToCorrectNetwork\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(WalletContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\User\\\\Desktop\\\\Intellify\\\\src\\\\components\\\\WalletProvider.tsx\",\n        lineNumber: 186,\n        columnNumber: 5\n    }, this);\n}\n_s(WalletProvider, \"j46d1xjH8UOnhZNU65uKJg3/IOw=\");\n_c = WalletProvider;\nfunction useWallet() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(WalletContext);\n    if (context === undefined) {\n        throw new Error(\"useWallet must be used within a WalletProvider\");\n    }\n    return context;\n}\n_s1(useWallet, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"WalletProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/WalletProvider.tsx\n"));

/***/ })

});